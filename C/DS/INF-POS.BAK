//INfix to Postfix
//if new elemnt is high PUSH!
#include<stdio.h>
#include<conio.h>
#define M 20
struct stack
{
	char a[M];
	int top;
};
struct stack s;
void push(char c)
{
	if(s.top==M-1)
		printf("\nStack Overflow");
	else
		s.a[++s.top]=c;
}
char pop()
{
	if(s.top==-1)
		return '\0';
	return s.a[s.top--];
}
int Oper(char ch)
{
	if(ch=='~')
		return 0;
	else if(ch=='+' || ch=='-')
		return 1;
	else if(ch=='*' || ch=='/')
		return 2;
	else if(ch=='^')
		return 3;
	else return 4;
}
void main()
{
	char post[M],inf[M];
	int i=0,k=0;
	clrscr();
	s.top=-1;
	printf("Enter the infix\n");
	gets(inf);
	while(inf[i]!='\0')
	{
		if((inf[i]>='a' && inf[i]<='z')||(inf[i]>='A' && inf[i]<='Z'))
			post[k++]=inf[i];
		else if(inf[i]=='(')
			push(inf[i]);
		else if(Oper(inf[i])<4)
		{
			if(Oper(inf[i])>Oper(s.a[s.top]))
				push(inf[i]);
			else
				while(Oper(inf[i])<Oper(s.a[s.top]))
					post[k++]=pop();
		}
		else if(inf[i]==')')
		{
			while(s.a[s.top]!='(')
				post[k++]=pop();
			pop();
		}
		else
			printf("Wrong oper");
		i++;
	}
	printf("\nINFIX: ");
	puts(inf);
	printf("\nPOSTFIX: ");
	puts(post);
	getch();
}